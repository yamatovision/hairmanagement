name: CD

on:
  push:
    branches: [ main, master ]
    
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
        
    - name: Configure Docker
      run: gcloud auth configure-docker
      
    - name: Build and push backend image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/hairmanagement-backend:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/hairmanagement-backend:${{ github.sha }}
        
    - name: Deploy backend to Cloud Run
      run: |
        gcloud run deploy hairmanagement-backend \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/hairmanagement-backend:${{ github.sha }} \
          --platform managed \
          --region asia-northeast1 \
          --allow-unauthenticated \
          --set-env-vars="NODE_ENV=production,DB_URI=${{ secrets.DB_URI }},JWT_SECRET=${{ secrets.JWT_SECRET }},CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }}"
          
    - name: Get backend URL
      id: backend-url
      run: |
        BACKEND_URL=$(gcloud run services describe hairmanagement-backend --platform managed --region asia-northeast1 --format 'value(status.url)')
        echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT
        
    - name: Install dependencies for frontend
      run: |
        cd frontend
        npm ci
        
    - name: Build frontend
      run: |
        cd frontend
        echo "REACT_APP_API_URL=${{ steps.backend-url.outputs.url }}" > .env.production
        echo "API_BASE_PATH=/api/v1" >> .env.production
        npm run build
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
        
    - name: Deploy frontend to Firebase
      run: |
        cd frontend
        firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }} --non-interactive
      
    - name: Deployment summary
      run: |
        echo "Backend deployed to: ${{ steps.backend-url.outputs.url }}"
        echo "Frontend deployed to Firebase Hosting"