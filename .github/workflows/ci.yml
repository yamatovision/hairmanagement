name: CI - Build and Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  # 依存関係インストールと共有パッケージビルド
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install backend dependencies
        run: cd backend && npm ci
      
      - name: Install shared dependencies
        run: cd shared && npm ci
      
      - name: Build shared module
        run: cd shared && npm run build
      
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            backend/node_modules
            shared/node_modules
            shared/dist
            backend/dist
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

  # TypeScriptビルドとリント
  build-typescript:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            backend/node_modules
            shared/node_modules
            shared/dist
            backend/dist
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Run TypeScript typecheck
        run: cd backend && npm run typecheck
      
      - name: Run ESLint
        run: cd backend && npm run lint
      
      - name: Build TypeScript
        run: cd backend && npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-dist
          path: backend/dist

  # JSバックアップバージョンのビルド
  build-js-fallback:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            backend/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Create minimal JavaScript version
        run: |
          cd backend
          [ -f server-minimal.js ] && cp -f server-minimal.js server-minimal.tmp.js
          # バージョン番号を埋め込み
          echo "const VERSION = '$(date +%Y%m%d%H%M%S)';" > server-minimal.js
          [ -f server-minimal.tmp.js ] && cat server-minimal.tmp.js >> server-minimal.js
          [ -f server-minimal.tmp.js ] && rm server-minimal.tmp.js
      
      - name: Upload JS backup artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-minimal
          path: backend/server-minimal.js

  # Dockerイメージビルドテスト
  build-docker-test:
    needs: [build-typescript, build-js-fallback]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download TS build artifacts
        uses: actions/download-artifact@v3
        with:
          name: backend-dist
          path: backend/dist
      
      - name: Download JS backup artifacts
        uses: actions/download-artifact@v3
        with:
          name: backend-minimal
          path: backend/
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build TS Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.cloudrun
          tags: patrolmanagement-backend:test
          load: true
          build-args: |
            FEATURES=all
      
      - name: Build JS backup Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.minimal
          tags: patrolmanagement-minimal:test
          load: true

  # テスト実行
  test:
    needs: setup
    runs-on: ubuntu-latest
    services:
      # テスト用MongoDBコンテナ
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            backend/node_modules
            shared/node_modules
            shared/dist
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
      
      - name: Run tests
        run: cd backend && npm test
        env:
          DB_URI: mongodb://localhost:27017/patrolmanagement-test
          NODE_ENV: test
      
      - name: Generate coverage report
        run: cd backend && npm run test:coverage
        env:
          DB_URI: mongodb://localhost:27017/patrolmanagement-test
          NODE_ENV: test
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage
          
  # フロントエンドビルド
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install frontend dependencies
        run: cd frontend && npm ci
        
      - name: Run TypeScript typecheck
        run: cd frontend && npm run typecheck
        
      - name: Build frontend
        run: cd frontend && CI=false npm run build
        
      - name: Upload frontend build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/build