{"numFailedTestSuites":1,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":5,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":9,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1743823243147,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["DailyCalendarInfo Data Flow Tests","getOrCreateCalendarInfo"],"duration":20,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of null (reading 'isSuccess')\n    at DailyCalendarInfoService.<anonymous> (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/application/services/daily-calendar-info.service.ts:49:28)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/application/services/daily-calendar-info.service.ts:17:58)"],"fullName":"DailyCalendarInfo Data Flow Tests getOrCreateCalendarInfo 既存のカレンダー情報が見つからない場合、新規作成する","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"既存のカレンダー情報が見つからない場合、新規作成する"},{"ancestorTitles":["DailyCalendarInfo Data Flow Tests","getOrCreateCalendarInfo"],"duration":6,"failureDetails":[{}],"failureMessages":["TypeError: this.dailyCalendarInfoRepository.createOrUpdateByDate is not a function\n    at DailyCalendarInfoService.<anonymous> (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/application/services/daily-calendar-info.service.ts:121:75)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/application/services/daily-calendar-info.service.ts:17:58)"],"fullName":"DailyCalendarInfo Data Flow Tests getOrCreateCalendarInfo 既存のカレンダー情報が見つかる場合、既存データを返す","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"既存のカレンダー情報が見つかる場合、既存データを返す"},{"ancestorTitles":["DailyCalendarInfo Data Flow Tests","enrichWithSajuData"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"DailyCalendarInfo Data Flow Tests enrichWithSajuData カレンダー情報とSajuプロファイルから拡張データを生成する","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"カレンダー情報とSajuプロファイルから拡張データを生成する"},{"ancestorTitles":["DailyCalendarInfo Data Flow Tests","enrichWithSajuData"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DailyCalendarInfo Data Flow Tests enrichWithSajuData SajuProfileがnullの場合、元のカレンダー情報をそのまま返す","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"SajuProfileがnullの場合、元のカレンダー情報をそのまま返す"},{"ancestorTitles":["DailyCalendarInfo Data Flow Tests","enrichWithSajuData"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"DailyCalendarInfo Data Flow Tests enrichWithSajuData SajuDataTransformerでエラー発生時、フォールバック処理を使用する","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"SajuDataTransformerでエラー発生時、フォールバック処理を使用する"},{"ancestorTitles":["DailyCalendarInfo Data Flow Tests","getCalendarInfoRange"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: existingInfosResult.getError is not a function\n    at DailyCalendarInfoService.<anonymous> (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/application/services/daily-calendar-info.service.ts:263:83)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/application/services/daily-calendar-info.service.ts:17:58)"],"fullName":"DailyCalendarInfo Data Flow Tests getCalendarInfoRange 日付範囲の日次カレンダー情報を取得する","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"日付範囲の日次カレンダー情報を取得する"},{"ancestorTitles":["DailyCalendarInfo Data Flow Tests","getCalendarInfoRange"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: existingInfosResult.getError is not a function\n    at DailyCalendarInfoService.<anonymous> (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/application/services/daily-calendar-info.service.ts:263:83)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/application/services/daily-calendar-info.service.ts:17:58)"],"fullName":"DailyCalendarInfo Data Flow Tests getCalendarInfoRange 存在しない日付のデータを作成する","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"存在しない日付のデータを作成する"},{"ancestorTitles":["DailyCalendarInfo Data Flow Tests","プライベートメソッド"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DailyCalendarInfo Data Flow Tests プライベートメソッド determineElementAndYinYang - 天干から五行と陰陽を正しく判定する","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"determineElementAndYinYang - 天干から五行と陰陽を正しく判定する"},{"ancestorTitles":["DailyCalendarInfo Data Flow Tests","プライベートメソッド"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DailyCalendarInfo Data Flow Tests プライベートメソッド isGeneratingRelation - 相生関係を正しく判定する","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"isGeneratingRelation - 相生関係を正しく判定する"}],"endTime":1743823244983,"message":"  ● DailyCalendarInfo Data Flow Tests › getOrCreateCalendarInfo › 既存のカレンダー情報が見つからない場合、新規作成する\n\n    TypeError: Cannot read properties of null (reading 'isSuccess')\n\n      47 |     // 既存の情報を検索\n      48 |     const existingInfoResult = await this.dailyCalendarInfoRepository.findByDate(dateStr);\n    > 49 |     if (existingInfoResult.isSuccess && existingInfoResult.getValue()) {\n         |                            ^\n      50 |       const existingInfo = existingInfoResult.getValue();\n      51 |       if (existingInfo) {\n      52 |         console.log(`[DailyCalendarInfoService] 既存の日次カレンダー情報が見つかりました: id=${existingInfo.id}`);\n\n      at DailyCalendarInfoService.<anonymous> (src/application/services/daily-calendar-info.service.ts:49:28)\n      at fulfilled (src/application/services/daily-calendar-info.service.ts:17:58)\n\n  ● DailyCalendarInfo Data Flow Tests › getOrCreateCalendarInfo › 既存のカレンダー情報が見つかる場合、既存データを返す\n\n    TypeError: this.dailyCalendarInfoRepository.createOrUpdateByDate is not a function\n\n      119 |       \n      120 |       // 情報を保存して返す\n    > 121 |       const resultCreateOrUpdate = await this.dailyCalendarInfoRepository.createOrUpdateByDate(calendarInfo);\n          |                                                                           ^\n      122 |       if (resultCreateOrUpdate.isSuccess) {\n      123 |         const savedInfo = resultCreateOrUpdate.getValue();\n      124 |         console.log(`[DailyCalendarInfoService] 日次カレンダー情報の保存が完了しました: id=${savedInfo.id}`);\n\n      at DailyCalendarInfoService.<anonymous> (src/application/services/daily-calendar-info.service.ts:121:75)\n      at fulfilled (src/application/services/daily-calendar-info.service.ts:17:58)\n\n  ● DailyCalendarInfo Data Flow Tests › getCalendarInfoRange › 日付範囲の日次カレンダー情報を取得する\n\n    TypeError: existingInfosResult.getError is not a function\n\n      261 |       existingInfos = existingInfosResult.getValue();\n      262 |     } else {\n    > 263 |       console.error(`[DailyCalendarInfoService] 既存データ取得エラー: ${existingInfosResult.getError().message}`);\n          |                                                                                   ^\n      264 |       // エラーの場合は空配列で続行\n      265 |     }\n      266 |     \n\n      at DailyCalendarInfoService.<anonymous> (src/application/services/daily-calendar-info.service.ts:263:83)\n      at fulfilled (src/application/services/daily-calendar-info.service.ts:17:58)\n\n  ● DailyCalendarInfo Data Flow Tests › getCalendarInfoRange › 存在しない日付のデータを作成する\n\n    TypeError: existingInfosResult.getError is not a function\n\n      261 |       existingInfos = existingInfosResult.getValue();\n      262 |     } else {\n    > 263 |       console.error(`[DailyCalendarInfoService] 既存データ取得エラー: ${existingInfosResult.getError().message}`);\n          |                                                                                   ^\n      264 |       // エラーの場合は空配列で続行\n      265 |     }\n      266 |     \n\n      at DailyCalendarInfoService.<anonymous> (src/application/services/daily-calendar-info.service.ts:263:83)\n      at fulfilled (src/application/services/daily-calendar-info.service.ts:17:58)\n","name":"/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/daily-calendar-info-data-flow.test.ts","startTime":1743823243268,"status":"failed","summary":""}],"wasInterrupted":false}
