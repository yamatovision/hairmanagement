{"numFailedTestSuites":1,"numFailedTests":6,"numPassedTestSuites":0,"numPassedTests":2,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":8,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1743823247882,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Integrated Data Flow Tests","End-to-end Data Flow"],"duration":25,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0\n    at /Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:235:54\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:13:58)"],"fullName":"Integrated Data Flow Tests End-to-end Data Flow ユーザーの運勢情報生成からカレンダー情報連携までの全フロー","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"failed","title":"ユーザーの運勢情報生成からカレンダー情報連携までの全フロー"},{"ancestorTitles":["Integrated Data Flow Tests","SajuDataTransformer to DailyCalendarInfoService Integration"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"Integrated Data Flow Tests SajuDataTransformer to DailyCalendarInfoService Integration DailyCalendarInfoServiceがSajuDataTransformerと正しく連携する","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"DailyCalendarInfoServiceがSajuDataTransformerと正しく連携する"},{"ancestorTitles":["Integrated Data Flow Tests","SajuDataTransformer to DailyFortuneService Integration"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0\n    at /Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:305:32\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:13:58)"],"fullName":"Integrated Data Flow Tests SajuDataTransformer to DailyFortuneService Integration DailyFortuneServiceがSajuDataTransformerと直接連携する","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"DailyFortuneServiceがSajuDataTransformerと直接連携する"},{"ancestorTitles":["Integrated Data Flow Tests","SajuDataTransformer to DailyFortuneService Integration"],"duration":2,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0\n    at /Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:338:26\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:13:58)"],"fullName":"Integrated Data Flow Tests SajuDataTransformer to DailyFortuneService Integration DailyFortuneServiceがcombineFortuneWithCalendarInfoと連携する","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"DailyFortuneServiceがcombineFortuneWithCalendarInfoと連携する"},{"ancestorTitles":["Integrated Data Flow Tests","Error Handling and Fallbacks"],"duration":5,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0\n    at /Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:369:26\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:13:58)"],"fullName":"Integrated Data Flow Tests Error Handling and Fallbacks カレンダー情報取得失敗時にDailyFortuneServiceがフォールバックする","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"カレンダー情報取得失敗時にDailyFortuneServiceがフォールバックする"},{"ancestorTitles":["Integrated Data Flow Tests","Error Handling and Fallbacks"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Integrated Data Flow Tests Error Handling and Fallbacks SajuDataTransformer失敗時にDailyFortuneServiceがフォールバック計算を使用する","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"SajuDataTransformer失敗時にDailyFortuneServiceがフォールバック計算を使用する"},{"ancestorTitles":["Integrated Data Flow Tests","Data Validation"],"duration":6,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:426:32)\n    at Promise.then.completed (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Integrated Data Flow Tests Data Validation SajuDataTransformerが無効なデータを検証して安全に処理する","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"SajuDataTransformerが無効なデータを検証して安全に処理する"},{"ancestorTitles":["Integrated Data Flow Tests","Data Validation"],"duration":8,"failureDetails":[{"message":"expect(received).rejects.toThrow()\n\nReceived promise resolved instead of rejected\nResolved to value: {\"advice\": \"アドバイスは構造化形式で提供されています\", \"aiGeneratedAdvice\": {\"advice\": \"# 今日のあなたの運気\nあなたは今日、清らかな小川のように穏やかに流れる運気です。静かな力強さがあり、困難な状況でも冷静さを保ち解決へと導くことができるでしょう。周囲からの信頼も厚く、調和のとれた一日となります。·\n# 個人目標へのアドバイス\n業務効率改善に向けて、今日はシステム全体を俯瞰する視点を持つと良いでしょう。細部にこだわりすぎず、全体の流れを整理することで新たな改善点が見えてきます。·\n# チーム目標へのアドバイス\nチーム連携においては、今日は特に情報共有の質に注目してみてください。単なる報告だけでなく、背景や意図も伝えることで、より深い理解と協力が生まれるでしょう。\", \"luckyPoints\": {\"action\": \"朝の深呼吸\", \"color\": \"青\", \"items\": [\"万年筆\", \"青いハンカチ\"], \"number\": 7}}, \"categories\": undefined, \"createdAt\": \"2025-04-05T03:20:49.913Z\", \"date\": \"2025-04-04\", \"id\": \"test-fortune-id\", \"overallScore\": 80, \"rating\": \"excellent\", \"sajuData\": {\"compatibility\": 80, \"mainElement\": \"未設定\", \"yinYang\": \"未設定\"}, \"starRating\": 4}"}],"failureMessages":["Error: expect(received).rejects.toThrow()\n\nReceived promise resolved instead of rejected\nResolved to value: {\"advice\": \"アドバイスは構造化形式で提供されています\", \"aiGeneratedAdvice\": {\"advice\": \"# 今日のあなたの運気\nあなたは今日、清らかな小川のように穏やかに流れる運気です。静かな力強さがあり、困難な状況でも冷静さを保ち解決へと導くことができるでしょう。周囲からの信頼も厚く、調和のとれた一日となります。·\n# 個人目標へのアドバイス\n業務効率改善に向けて、今日はシステム全体を俯瞰する視点を持つと良いでしょう。細部にこだわりすぎず、全体の流れを整理することで新たな改善点が見えてきます。·\n# チーム目標へのアドバイス\nチーム連携においては、今日は特に情報共有の質に注目してみてください。単なる報告だけでなく、背景や意図も伝えることで、より深い理解と協力が生まれるでしょう。\", \"luckyPoints\": {\"action\": \"朝の深呼吸\", \"color\": \"青\", \"items\": [\"万年筆\", \"青いハンカチ\"], \"number\": 7}}, \"categories\": undefined, \"createdAt\": \"2025-04-05T03:20:49.913Z\", \"date\": \"2025-04-04\", \"id\": \"test-fortune-id\", \"overallScore\": 80, \"rating\": \"excellent\", \"sajuData\": {\"compatibility\": 80, \"mainElement\": \"未設定\", \"yinYang\": \"未設定\"}, \"starRating\": 4}\n    at expect (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/expect/build/index.js:113:15)\n    at /Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:448:13\n    at Generator.next (<anonymous>)\n    at /Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:16:71\n    at new Promise (<anonymous>)\n    at Object.<anonymous>.__awaiter (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:12:12)\n    at Object.<anonymous> (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts:440:60)\n    at Promise.then.completed (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Integrated Data Flow Tests Data Validation DailyFortuneServiceが無効なユーザーデータを検証する","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"DailyFortuneServiceが無効なユーザーデータを検証する"}],"endTime":1743823249935,"message":"  ● Integrated Data Flow Tests › End-to-end Data Flow › ユーザーの運勢情報生成からカレンダー情報連携までの全フロー\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n      233 |       \n      234 |       // DailyCalendarInfoServiceによるカレンダー情報取得\n    > 235 |       expect(dailyCalendarInfoRepository.findByDate).toHaveBeenCalled();\n          |                                                      ^\n      236 |       \n      237 |       // SajuDataTransformerによる互換性データ生成\n      238 |       // 実際のインスタンスを使用しているため、モックのcallsは記録されていない\n\n      at src/tests/saju/integrated-data-flow.test.ts:235:54\n      at fulfilled (src/tests/saju/integrated-data-flow.test.ts:13:58)\n\n  ● Integrated Data Flow Tests › SajuDataTransformer to DailyFortuneService Integration › DailyFortuneServiceがSajuDataTransformerと直接連携する\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n      303 |       \n      304 |       // createFortuneCompatibilityDataが呼ばれたことを確認\n    > 305 |       expect(compatibilitySpy).toHaveBeenCalled();\n          |                                ^\n      306 |       const callArgs = compatibilitySpy.mock.calls[0];\n      307 |       expect(callArgs[0]).toBeDefined(); // カレンダー情報\n      308 |       expect(callArgs[1]).toBe(testUser.sajuProfile.fourPillars.dayPillar.stem); // 日主\n\n      at src/tests/saju/integrated-data-flow.test.ts:305:32\n      at fulfilled (src/tests/saju/integrated-data-flow.test.ts:13:58)\n\n  ● Integrated Data Flow Tests › SajuDataTransformer to DailyFortuneService Integration › DailyFortuneServiceがcombineFortuneWithCalendarInfoと連携する\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n      336 |       \n      337 |       // combineFortuneWithCalendarInfoが呼ばれたことを確認\n    > 338 |       expect(combineSpy).toHaveBeenCalled();\n          |                          ^\n      339 |       const callArgs = combineSpy.mock.calls[0];\n      340 |       expect(callArgs[0]).toBe(dummyFortune); // 運勢情報\n      341 |       expect(callArgs[1]).toBeDefined(); // カレンダー情報\n\n      at src/tests/saju/integrated-data-flow.test.ts:338:26\n      at fulfilled (src/tests/saju/integrated-data-flow.test.ts:13:58)\n\n  ● Integrated Data Flow Tests › Error Handling and Fallbacks › カレンダー情報取得失敗時にDailyFortuneServiceがフォールバックする\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n      367 |       \n      368 |       // combineFortuneWithCalendarInfoがエラーに関わらず呼ばれることを確認\n    > 369 |       expect(combineSpy).toHaveBeenCalled();\n          |                          ^\n      370 |       \n      371 |       // スパイをリストア\n      372 |       combineSpy.mockRestore();\n\n      at src/tests/saju/integrated-data-flow.test.ts:369:26\n      at fulfilled (src/tests/saju/integrated-data-flow.test.ts:13:58)\n\n  ● Integrated Data Flow Tests › Data Validation › SajuDataTransformerが無効なデータを検証して安全に処理する\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      424 |       \n      425 |       // 結果がFailureであることを確認\n    > 426 |       expect(result.isFailure).toBe(true);\n          |                                ^\n      427 |       \n      428 |       if (result.isFailure) {\n      429 |         // エラーメッセージに関するアサーション\n\n      at Object.<anonymous> (src/tests/saju/integrated-data-flow.test.ts:426:32)\n\n  ● Integrated Data Flow Tests › Data Validation › DailyFortuneServiceが無効なユーザーデータを検証する\n\n    expect(received).rejects.toThrow()\n\n    Received promise resolved instead of rejected\n    Resolved to value: {\"advice\": \"アドバイスは構造化形式で提供されています\", \"aiGeneratedAdvice\": {\"advice\": \"# 今日のあなたの運気\n    あなたは今日、清らかな小川のように穏やかに流れる運気です。静かな力強さがあり、困難な状況でも冷静さを保ち解決へと導くことができるでしょう。周囲からの信頼も厚く、調和のとれた一日となります。·\n    # 個人目標へのアドバイス\n    業務効率改善に向けて、今日はシステム全体を俯瞰する視点を持つと良いでしょう。細部にこだわりすぎず、全体の流れを整理することで新たな改善点が見えてきます。·\n    # チーム目標へのアドバイス\n    チーム連携においては、今日は特に情報共有の質に注目してみてください。単なる報告だけでなく、背景や意図も伝えることで、より深い理解と協力が生まれるでしょう。\", \"luckyPoints\": {\"action\": \"朝の深呼吸\", \"color\": \"青\", \"items\": [\"万年筆\", \"青いハンカチ\"], \"number\": 7}}, \"categories\": undefined, \"createdAt\": \"2025-04-05T03:20:49.913Z\", \"date\": \"2025-04-04\", \"id\": \"test-fortune-id\", \"overallScore\": 80, \"rating\": \"excellent\", \"sajuData\": {\"compatibility\": 80, \"mainElement\": \"未設定\", \"yinYang\": \"未設定\"}, \"starRating\": 4}\n\n      446 |       \n      447 |       // getDailyFortuneを実行するとエラーがスローされる\n    > 448 |       await expect(fortuneService.getDailyFortune(userId))\n          |             ^\n      449 |         .rejects.toThrow('ユーザーの生年月日が設定されていません');\n      450 |     });\n      451 |   });\n\n      at expect (node_modules/expect/build/index.js:113:15)\n      at src/tests/saju/integrated-data-flow.test.ts:448:13\n      at src/tests/saju/integrated-data-flow.test.ts:16:71\n      at Object.<anonymous>.__awaiter (src/tests/saju/integrated-data-flow.test.ts:12:12)\n      at Object.<anonymous> (src/tests/saju/integrated-data-flow.test.ts:440:60)\n","name":"/Users/tatsuya/Desktop/システム開発/AppGenius2/patrolmanagement/backend/src/tests/saju/integrated-data-flow.test.ts","startTime":1743823248023,"status":"failed","summary":""}],"wasInterrupted":false}
